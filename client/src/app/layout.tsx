import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import '../sass/main.scss';

import { getGlobalSettings } from '@/data/loaders';
import { Header } from '@/components/layout/Header';
import { Footer } from '@/components/layout/Footer';
import { notFound } from 'next/navigation';

const geistSans = Geist({
	variable: '--font-geist-sans',
	subsets: ['latin'],
});

const geistMono = Geist_Mono({
	variable: '--font-geist-mono',
	subsets: ['latin'],
});

export const metadata: Metadata = {
	title: 'Create Next App',
	description: 'Generated by create next app',
};

async function loader() {
	const data = await getGlobalSettings();
	if (!data) notFound();
	return { ...data.data };
}

export default async function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	const data = await loader();
	const blocks = data?.blocks || [];

	// Получаем header, так как это объект в массиве
	const headerData = blocks.find(
		(block) => block.__component === 'layout.header'
	);
	const foorerData = blocks.find(
		(block) => block.__component === 'layout.footer'
	);

	return (
		<html lang="en">
			<body className={`${geistSans.variable} ${geistMono.variable}`}>
				{/* Передаем данные для header */}
				{headerData && <Header data={headerData} />}
				{children}
				<Footer data={foorerData} />
			</body>
		</html>
	);
}
